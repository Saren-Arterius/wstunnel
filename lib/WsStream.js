// Generated by CoffeeScript 1.10.0
(function() {
  var WsStream, assert, domain, future, log, stream, util,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  stream = require("stream");

  assert = require("assert");

  log = require("lawg");

  util = require("util");

  future = require("phuture");

  domain = require("domain");

  module.exports = WsStream = (function(superClass) {
    extend(WsStream, superClass);

    function WsStream(ws) {
      this.ws = ws;
      WsStream.__super__.constructor.call(this);
      this._sig = "ws";
      this._open = true;
      this.ws.on('message', (function(_this) {
        return function(message) {
          if (_this._open) {
            return _this.push(message.binaryData);
          }
        };
      })(this));
      this.ws.on('close', (function(_this) {
        return function() {
          _this._open = false;
          return _this.emit('close');
        };
      })(this));
      this.ws.on("error", (function(_this) {
        return function(err) {
          return _this.emit('error', err);
        };
      })(this));
    }

    WsStream.prototype.end = function() {
      WsStream.__super__.end.call(this);
      return this.ws.close();
    };

    WsStream.prototype._read = function() {};

    WsStream.prototype._write = function(chunk, encoding, callback) {
      if (this._open) {
        return this.ws.sendBytes(chunk, callback);
      }
    };

    return WsStream;

  })(stream.Duplex);

}).call(this);

//# sourceMappingURL=WsStream.js.map
